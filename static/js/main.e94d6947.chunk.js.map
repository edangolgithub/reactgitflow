{"version":3,"sources":["components/Counter.jsx","components/GHBadge.jsx","components/Toggle.jsx","logo.svg","App.jsx","reportWebVitals.js","index.jsx"],"names":["Counter","useState","count","setCount","href","onClick","GHBadge","props","username","repoName","repoUrl","badgeUrl","altText","src","alt","Toggle","isHidden","setIsHidden","text","App","className","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAEe,SAASA,IACtB,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,OACE,gCACE,mDAEA,+DAEA,yEAC2C,IACzC,mBAAGC,KAAK,4CAAR,kCAEK,IAJP,eAQA,6CAAgBF,EAAhB,YAEA,wBAAQG,QAAS,kBAAMF,EAASD,EAAQ,IAAxC,yBCrBS,SAASI,EAAQC,GAC9B,IAAQC,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,SAEZC,EAAO,6BAAyBF,EAAzB,YAAqCC,GAC5CE,EAAQ,iDAA6CH,EAA7C,oBAAiEC,EAAjE,2BACRG,EAAO,UAAMJ,EAAN,cAAoBC,GAEjC,OACE,mBAAGL,KAAMM,EAAT,SACE,qBAAKG,IAAKF,EAAUG,IAAKF,MCPhB,SAASG,EAAOR,GAC7B,MAAgCN,oBAAS,GAAzC,mBAAOe,EAAP,KAAiBC,EAAjB,KAMA,OACE,gCACE,kDAEA,+DAEA,wBAAQZ,QAAS,WATnBY,GAAaD,IASX,oBAEA,6BAAKA,GAAYT,EAAMW,UCjBd,UAA0B,iCCM1B,SAASC,IACtB,OACE,sBAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKP,IAAKQ,EAAMD,UAAU,WAAWN,IAAI,SAEzC,uDACA,4EAEA,cAACR,EAAD,CAASE,SAAS,gBAAgBC,SAAS,wBAG7C,gCACE,cAACT,EAAD,IAEA,cAACe,EAAD,CAAQG,KAAK,iBACb,uBACA,6B,UCXOI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e94d6947.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport default function Counter() {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <h2>Counter component</h2>\n\n      <p>A simple functional component.</p>\n\n      <p>\n        We increment a numeric counter, based on{' '}\n        <a href=\"https://reactjs.org/docs/hooks-state.html\">\n          Using the State Hook\n        </a>{' '}\n        tutorial.\n      </p>\n\n      <p>You clicked {count} times</p>\n\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n    </div>\n  );\n}\n","export default function GHBadge(props) {\n  const { username, repoName } = props;\n\n  const repoUrl = `https://github.com/${username}/${repoName}`;\n  const badgeUrl = `https://img.shields.io/static/v1?label=${username}&message=${repoName}&color=blue&logo=github`;\n  const altText = `${username} - ${repoName}`;\n\n  return (\n    <a href={repoUrl}>\n      <img src={badgeUrl} alt={altText} />\n    </a>\n  );\n}\n","import { useState } from 'react';\n\nexport default function Toggle(props) {\n  const [isHidden, setIsHidden] = useState(false);\n\n  const showHide = () => {\n    setIsHidden(!isHidden);\n  };\n\n  return (\n    <div>\n      <h2>Toggle component</h2>\n\n      <p>A simple functional component.</p>\n\n      <button onClick={() => showHide()}>Toggle</button>\n\n      <p>{!isHidden && props.text}</p>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import './App.css';\nimport Counter from './components/Counter';\nimport GHBadge from './components/GHBadge';\nimport Toggle from './components/Toggle';\nimport logo from './logo.svg';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n        <h1>React Quickstart evan</h1>\n        <p>A template project deployed to GitHub Pages</p>\n\n        <GHBadge username=\"MichaelCurrin\" repoName=\"react-quickstart\" />\n      </header>\n\n      <div>\n        <Counter />\n\n        <Toggle text=\"Dynamic text\" />\n        <br />\n        <br />\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}